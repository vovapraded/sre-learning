apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: node-service
  labels:
    app.kubernetes.io/name: {{ include "node-service.name" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app: node-service


spec:
  serviceName: node-service
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ include "node-service.name" . }}
      app.kubernetes.io/instance: {{ .Release.Name }}
      app: node-service

  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ include "node-service.name" . }}
        app.kubernetes.io/instance: {{ .Release.Name }}
        app: node-service

    spec:
      serviceAccountName: {{ .Values.serviceAccount.name }}
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              INDEX=$(echo "$POD_NAME" | awk -F'-' '{print $NF}');
              HOST="postgres-node-${INDEX}.postgres-node.metrics.svc.cluster.local"
              echo "Waiting for $HOST:5432..."
              until nc -z $HOST 5432; do
                echo "Still waiting for $HOST..."
                sleep 2
              done
              echo "Postgres is up!"
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      containers:
        - name: node
          image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.service.port }}
          env:
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.postgres.auth.username }}
            - name: SPRING_DATASOURCE_PASSWORD
              value: {{ .Values.postgres.auth.password }}
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command:
            - sh
            - -c
            - |
              INDEX=$(echo "$POD_NAME" | awk -F'-' '{print $NF}');
              export SPRING_DATASOURCE_URL=jdbc:postgresql://postgres-node-${INDEX}.postgres-node.metrics.svc.cluster.local:5432/postgres-node-${INDEX};
              echo "Starting with DB: $SPRING_DATASOURCE_URL";
              java -jar app.jar
          livenessProbe:
            httpGet:
              path: {{ .Values.livenessProbe.httpGet.path }}
              port: http
            initialDelaySeconds: {{ .Values.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.livenessProbe.periodSeconds }}

          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.httpGet.path }}
              port: http
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
