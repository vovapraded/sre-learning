apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: node-service
  namespace: {{ .Release.Namespace }}
spec:
  serviceName: node-service
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: node-service
  template:
    metadata:
      labels:
        app: node-service
    spec:
      serviceAccountName: metrics-sa
      volumes:
        - name: config
          emptyDir: {}
      initContainers:
        - name: wait-and-generate-url
          image: alpine
          volumeMounts:
            - name: config
              mountPath: /config
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
          command:
            - sh
            - -c
            - |
              apk add --no-cache netcat-openbsd
              INDEX=$(echo "$POD_NAME" | awk -F'-' '{print $NF}')
              HOST="{{ .Values.database.prefix }}-${INDEX}.{{ .Values.database.prefix }}.{{ .Values.database.namespace }}.svc.cluster.local"
              echo "Waiting for $HOST:{{ .Values.database.port }}..."
              until nc -z "$HOST" {{ .Values.database.port }}; do
                echo "Still waiting for $HOST..."
                sleep 2
              done
              echo "export SPRING_DATASOURCE_URL=jdbc:postgresql://$HOST:{{ .Values.database.port }}/{{ $.Values.spring.datasource.baseName }}-${INDEX}" > /config/env
      containers:
        - name: node
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          envFrom:
            - secretRef:
                name: {{ .Values.database.secretName }}
          volumeMounts:
            - name: config
              mountPath: /config
          command:
            - sh
            - -c
            - |
              echo "Sourcing env..." && \
              . /config/env && \
              echo "Starting app with SPRING_DATASOURCE_URL=$SPRING_DATASOURCE_URL" && \
              java -jar app.jar
          readinessProbe:
            httpGet:
              path: {{ .Values.readinessProbe.path }}
              port: {{ .Values.service.port }}
            initialDelaySeconds: {{ .Values.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.readinessProbe.periodSeconds }}
